$date
	Wed May  6 01:51:23 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_top $end
$var wire 1 ! reset $end
$var wire 1 " req1 $end
$var wire 1 # req0 $end
$var wire 1 $ gnt1 $end
$var wire 1 % gnt0 $end
$var wire 1 & clock $end
$scope module clocks $end
$var reg 1 & clock $end
$upscope $end
$scope module dut $end
$var wire 1 & clock $end
$var wire 1 ! reset $end
$var wire 1 " req_1 $end
$var wire 1 # req_0 $end
$var reg 1 % gnt_0 $end
$var reg 1 $ gnt_1 $end
$var reg 3 ' next_state [2:0] $end
$var reg 3 ( state [2:0] $end
$scope begin FSM_COMBO $end
$upscope $end
$scope begin FSM_SEQ $end
$upscope $end
$scope begin OUTPUT_LOGIC $end
$upscope $end
$upscope $end
$scope module tb $end
$var wire 1 & clk $end
$var wire 1 % gnt0 $end
$var wire 1 $ gnt1 $end
$var reg 1 # req0 $end
$var reg 1 " req1 $end
$var reg 1 ! reset $end
$var integer 32 ) log [31:0] $end
$scope module sb $end
$var wire 1 & clk $end
$var wire 1 # req0 $end
$var wire 1 " req1 $end
$var wire 1 * sb_gnt1 $end
$var wire 1 + sb_gnt0 $end
$var reg 2 , sb_state [1:0] $end
$upscope $end
$scope task checker $end
$var integer 32 - iteration [31:0] $end
$upscope $end
$scope task drv_init $end
$upscope $end
$scope task drv_request $end
$var integer 32 . iteration [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
x+
x*
b10 )
bx (
bx '
0&
x%
x$
x#
x"
x!
$end
#5
0+
0*
b0 ,
1&
#10
1!
0&
#15
0$
0%
b1 '
b1 (
1&
#20
0!
0&
#25
1&
#30
b1100100 .
b1100100 -
0&
#35
1&
#40
b100 '
1"
0#
0&
#45
1$
b100 '
b100 (
1*
b10 ,
1&
#50
b100 '
1#
0&
#55
1&
#60
0&
#65
1&
#70
b1 '
0"
0&
#75
0$
b10 '
b1 (
0*
b0 ,
1&
#80
b10 '
1"
0&
#85
1%
b10 '
b10 (
1+
b1 ,
1&
#90
b1 '
0#
0&
#95
0%
b100 '
b1 (
0+
b0 ,
1&
#100
b10 '
0"
1#
0&
#105
1%
b10 '
b10 (
1+
b1 ,
1&
#110
0&
#115
1&
#120
0&
#125
1&
#130
b10 '
1"
0&
#135
1&
#140
b1 '
0#
0&
#145
0%
b100 '
b1 (
0+
b0 ,
1&
#150
b1 '
0"
0&
#155
1&
#160
b100 '
1"
0&
#165
1$
b100 '
b100 (
1*
b10 ,
1&
#170
0&
#175
1&
#180
b100 '
1#
0&
#185
1&
#190
b1 '
0"
0&
#195
0$
b10 '
b1 (
0*
b0 ,
1&
#200
b1 '
0#
0&
#205
1&
#210
b100 '
1"
0&
#215
1$
b100 '
b100 (
1*
b10 ,
1&
#220
0&
#225
1&
#230
b100 '
1#
0&
#235
1&
#240
0&
#245
1&
#250
b1 '
0"
0#
0&
#255
0$
b1 '
b1 (
0*
b0 ,
1&
#260
b10 '
1"
1#
0&
#265
1%
b10 '
b10 (
1+
b1 ,
1&
#270
b10 '
0"
0&
#275
1&
#280
b1 '
0#
0&
#285
0%
b1 '
b1 (
0+
b0 ,
1&
#290
0&
#295
1&
#300
b10 '
1#
0&
#305
1%
b10 '
b10 (
1+
b1 ,
1&
#310
b1 '
1"
0#
0&
#315
0%
b100 '
b1 (
0+
b0 ,
1&
#320
b10 '
0"
1#
0&
#325
1%
b10 '
b10 (
1+
b1 ,
1&
#330
b1 '
0#
0&
#335
0%
b1 '
b1 (
0+
b0 ,
1&
#340
0&
#345
1&
#350
b10 '
1"
1#
0&
#355
1%
b10 '
b10 (
1+
b1 ,
1&
#360
0&
#365
1&
#370
b10 '
0"
0&
#375
1&
#380
b1 '
1"
0#
0&
#385
0%
b100 '
b1 (
0+
b0 ,
1&
#390
b10 '
1#
0&
#395
1%
b10 '
b10 (
1+
b1 ,
1&
#400
b1 '
0"
0#
0&
#405
0%
b1 '
b1 (
0+
b0 ,
1&
#410
b10 '
1"
1#
0&
#415
1%
b10 '
b10 (
1+
b1 ,
1&
#420
b1 '
0#
0&
#425
0%
b100 '
b1 (
0+
b0 ,
1&
#430
b10 '
0"
1#
0&
#435
1%
b10 '
b10 (
1+
b1 ,
1&
#440
b10 '
1"
0&
#445
1&
#450
b10 '
0"
0&
#455
1&
#460
b10 '
1"
0&
#465
1&
#470
b1 '
0"
0#
0&
#475
0%
b1 '
b1 (
0+
b0 ,
1&
#480
0&
#485
1&
#490
b10 '
1"
1#
0&
#495
1%
b10 '
b10 (
1+
b1 ,
1&
#500
b1 '
0"
0#
0&
#505
0%
b1 '
b1 (
0+
b0 ,
1&
#510
b10 '
1"
1#
0&
#515
1%
b10 '
b10 (
1+
b1 ,
1&
#520
0&
#525
1&
#530
b10 '
0"
0&
#535
1&
#540
b10 '
1"
0&
#545
1&
#550
b10 '
0"
0&
#555
1&
#560
b1 '
0#
0&
#565
0%
b1 '
b1 (
0+
b0 ,
1&
#570
0&
#575
1&
#580
0&
#585
1&
#590
b10 '
1"
1#
0&
#595
1%
b10 '
b10 (
1+
b1 ,
1&
#600
0&
#605
1&
#610
b10 '
0"
0&
#615
1&
#620
b10 '
1"
0&
#625
1&
#630
b1 '
0"
0#
0&
#635
0%
b1 '
b1 (
0+
b0 ,
1&
#640
b10 '
1"
1#
0&
#645
1%
b10 '
b10 (
1+
b1 ,
1&
#650
b1 '
0#
0&
#655
0%
b100 '
b1 (
0+
b0 ,
1&
#660
b10 '
1#
0&
#665
1%
b10 '
b10 (
1+
b1 ,
1&
#670
b10 '
0"
0&
#675
1&
#680
b1 '
0#
0&
#685
0%
b1 '
b1 (
0+
b0 ,
1&
#690
b10 '
1#
0&
#695
1%
b10 '
b10 (
1+
b1 ,
1&
#700
b1 '
0#
0&
#705
0%
b1 '
b1 (
0+
b0 ,
1&
#710
b10 '
1"
1#
0&
#715
1%
b10 '
b10 (
1+
b1 ,
1&
#720
b1 '
0"
0#
0&
#725
0%
b1 '
b1 (
0+
b0 ,
1&
#730
b10 '
1#
0&
#735
1%
b10 '
b10 (
1+
b1 ,
1&
#740
b1 '
0#
0&
#745
0%
b1 '
b1 (
0+
b0 ,
1&
#750
b10 '
1#
0&
#755
1%
b10 '
b10 (
1+
b1 ,
1&
#760
b1 '
1"
0#
0&
#765
0%
b100 '
b1 (
0+
b0 ,
1&
#770
0&
#775
1$
b100 '
b100 (
1*
b10 ,
1&
#780
b100 '
1#
0&
#785
1&
#790
0&
#795
1&
#800
b1 '
0"
0#
0&
#805
0$
b1 '
b1 (
0*
b0 ,
1&
#810
b100 '
1"
0&
#815
1$
b100 '
b100 (
1*
b10 ,
1&
#820
b1 '
0"
0&
#825
0$
b1 '
b1 (
0*
b0 ,
1&
#830
b10 '
1"
1#
0&
#835
1%
b10 '
b10 (
1+
b1 ,
1&
#840
b1 '
0"
0#
0&
#845
0%
b1 '
b1 (
0+
b0 ,
1&
#850
b100 '
1"
0&
#855
1$
b100 '
b100 (
1*
b10 ,
1&
#860
b1 '
0"
1#
0&
#865
0$
b10 '
b1 (
0*
b0 ,
1&
#870
b1 '
0#
0&
#875
1&
#880
b10 '
1"
1#
0&
#885
1%
b10 '
b10 (
1+
b1 ,
1&
#890
b1 '
0"
0#
0&
#895
0%
b1 '
b1 (
0+
b0 ,
1&
#900
b100 '
1"
0&
#905
1$
b100 '
b100 (
1*
b10 ,
1&
#910
b1 '
0"
0&
#915
0$
b1 '
b1 (
0*
b0 ,
1&
#920
b10 '
1#
0&
#925
1%
b10 '
b10 (
1+
b1 ,
1&
#930
b1 '
0#
0&
#935
0%
b1 '
b1 (
0+
b0 ,
1&
#940
b10 '
1#
0&
#945
1%
b10 '
b10 (
1+
b1 ,
1&
#950
b10 '
1"
0&
#955
1&
#960
b1 '
0"
0#
0&
#965
0%
b1 '
b1 (
0+
b0 ,
1&
#970
0&
#975
1&
#980
b10 '
1#
0&
#985
1%
b10 '
b10 (
1+
b1 ,
1&
#990
b1 '
0#
0&
#995
0%
b1 '
b1 (
0+
b0 ,
1&
#1000
b100 '
1"
0&
#1005
1$
b100 '
b100 (
1*
b10 ,
1&
#1010
b100 '
1#
0&
#1015
1&
#1020
b100 '
0#
0&
#1025
1&
#1030
b100 '
1#
0&
#1035
1&
#1040
0&
#1045
1&
#1050
0&
#1055
1&
#1060
0&
#1065
1&
#1070
0&
#1075
1&
#1080
0&
#1085
1&
#1090
0&
#1095
1&
#1100
0&
#1105
1&
#1110
0&
#1115
1&
#1120
0&
#1125
1&
#1130
0&
#1135
1&
#1140
0&
#1145
1&
#1150
0&
#1155
1&
#1160
0&
#1165
1&
#1170
0&
#1175
1&
#1180
0&
#1185
1&
#1190
0&
#1195
1&
#1200
0&
#1205
1&
#1210
0&
#1215
1&
#1220
0&
#1225
1&
#1230
0&
